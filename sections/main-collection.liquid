<style>
  #shopify-section-{{ section.id }} {
    --section-padding-top: {{ section.settings.padding_top }}px;
    --section-padding-bottom: {{ section.settings.padding_bottom }}px;
  }
</style>

<script src="{{ 'collection.js' | asset_url }}" defer></script>

{%- liquid
  assign current_filter_size = 0

  for filter in collection.filters
    assign current_filter_size = current_filter_size | plus: filter.active_values.size
  endfor

  assign description = section.blocks | where: "type", "description" | first
  assign subcollections = section.blocks | where: "type", "subcollections" | first

  assign enable_sorting = section.settings.enable_sorting
  assign enable_filtering = section.settings.enable_filtering
  assign filter_type = section.settings.filter_type
-%}

<div class="section section--padding{% if section.settings.divider %} section--divider{% endif %}{% if section.settings.rounded %} section--rounded relative{% endif %}">
  <div class="collection page-width{% if section.settings.full_width %} page-width--full{% endif %} relative{% if enable_filtering %} with-{{ filter_type }}{% endif %}">
    {%- if description != blank and collection.description != blank -%}
      <div class="rte collection__description" {{ description.shopify_attributes }}>
        {{- collection.description -}}
      </div>
    {%- endif -%}

    {%- paginate collection.products by section.settings.products_per_page -%}
      {%- if collection.all_products_count > 0 -%}
        {%- render 'facets-sticky',
          results: collection,
          collapsed: section.settings.filter_collapsed,
          enable_color_swatches: section.settings.filter_color_swatches,
          enable_filtering: enable_filtering,
          enable_sorting: enable_sorting
        -%}
      {%- endif -%}

      {%- if enable_filtering or enable_sorting or subcollections != blank -%}
        <div class="items-center hidden gap-4 collection__topbar xl:flex">
          {%- if filter_type == 'drawer' and collection.all_products_count > 0 -%}
            {%- render 'facets-drawer',
              results: collection,
              collapsed: section.settings.filter_collapsed,
              enable_color_swatches: section.settings.filter_color_swatches
            -%}
          {%- endif -%}

          {%- if subcollections != blank -%}
            {%- render 'subcollections',
              main_menu: subcollections.settings.menu,
              per_row: subcollections.settings.per_row,
              show_count: subcollections.settings.show_count
            -%}
          {%- else -%}
            <p id="ProductCount" class="text-base lg:text-lg" role="status">
              {%- liquid
                if collection.results_count
                  echo 'general.search.results_with_count' | t: terms: collection.terms, count: collection.results_count
                elsif collection.products_count == collection.all_products_count
                  echo 'collections.general.product_count_simple' | t: count: collection.products_count
                else
                  echo 'collections.general.product_count' | t: product_count: collection.products_count, count: collection.all_products_count
                endif
              -%}
            </p>
          {%- endif -%}

          {%- if enable_sorting and collection.all_products_count > 0 -%}
            {%- liquid
              assign sort_by = collection.sort_by | default: collection.default_sort_by
              for option in collection.sort_options
                if option.value == sort_by
                  assign sort_by_name = option.name
                  break
                endif
              endfor
            -%}
            <div class="inline-flex items-center gap-6 facet-sorting" id="SortByContainer">
              <span>{{ 'collections.sorting.sort_by_label' | t }}</span>
              <facet-sort class="relative sort-wrapper">
                <hover-element class="overflow-hidden button button--secondary sort-by whitespace-nowrap z-3">
                  <span class="btn-fill" data-fill></span>
                  <div class="btn-text">
                    <span class="relative flex items-center justify-center w-full gap-5 sort-header">
                      <span class="sort-selection">{{ sort_by_name | escape }}</span>
                      <span class="absolute left-0 text-sm tracking-widest uppercase opacity-0 sort-title">{{ 'collections.sorting.sort_button' | t }}</span>
                      <span class="flex items-center justify-center rounded-full sort-close">
                        {%- render 'icon', icon: 'close', size: 'sm' -%}
                      </span>
                    </span>
                    <ul class="absolute left-0 grid invisible w-full h-auto gap-2 text-left opacity-0 sort-listbox">
                      {%- for option in collection.sort_options -%}
                        <li class="relative opacity-0">
                          <input id="SortBy-{{ option.value }}" class="sr-only" name="sort_by" type="radio" value="{{ option.value }}"{% if option.value == sort_by %} checked{% endif %} />
                          <label for="SortBy-{{ option.value }}" class="text-xl reversed-link">{{ option.name | escape }}</label>
                        </li>
                      {%- endfor -%}
                    </ul>
                  </div>
                </hover-element>
              </facet-sort>
            </div>
          {%- endif -%}
        </div>
      {%- endif -%}

      {%- liquid
        if enable_filtering
          render 'facets-active', results: collection, enable_color_swatches: section.settings.filter_color_swatches
        endif
      -%}

      <div class="flex collection__content">
        {%- if enable_filtering and filter_type == 'sidebar' and collection.all_products_count > 0 -%}
          <div class="hidden xl:block" id="FacetFiltersContainer">
            <sticky-element class="sticky top-0 block facets__scroll">
              {%- render 'facets',
                context: 'sidebar',
                results: collection,
                collapsed: section.settings.filter_collapsed,
                enable_color_swatches: section.settings.filter_color_swatches
              -%}
            </sticky-element>
          </div>
        {%- endif -%}

        <div class="flex flex-col gap-12 grow" id="ProductGridContainer">
          {%- if collection.products.size == 0 -%}
            <div class="grid items-center justify-center text-center empty-state gap-7d5">
              {%- if collection.all_products_count > 0 -%}
                <div class="flex flex-col items-center gap-3">
                  {%- render 'icon', icon: 'empty', size: 'xxxl' -%}
                  <p class="font-bold leading-none tracking-tight">{{ 'collections.general.no_results' | t }}</p>
                  <p>{{ 'collections.general.use_fewer_filters' | t }}</p>
                </div>
                <a class="button button--primary icon-with-text" href="{{ collection.url }}" is="facet-remove" data-magnet="0">
                  <span class="btn-fill" data-fill></span>
                  <span class="btn-text">
                    {%- liquid
                      render 'icon', icon: 'close-alt', size: 'xxxs'
                      echo 'collections.filtering.clear_all' | t
                    -%}
                  </span>
                </a>
              {%- else -%}
                <div class="flex flex-col items-center gap-3">
                  {%- render 'icon', icon: 'empty', size: 'xxxl' -%}
                  <p class="font-bold leading-none tracking-tight">{{ 'collections.general.empty' | t }}</p>
                </div>
                <a class="button button--primary icon-with-text" href="{{ routes.all_products_collection_url }}" is="hover-link">
                  <span class="btn-fill" data-fill></span>
                  <span class="btn-text">{{ 'collections.general.continue_shopping' | t }}</span>
                </a>
              {%- endif -%}
            </div>
          {%- endif -%}

          {%- if collection.all_products_count > 0 -%}
            <motion-list class="card-grid card-grid--{{ section.settings.columns }} mobile:card-grid--{{ section.settings.columns_mobile }} grid relative">
              {%- for product in collection.products -%}
                {%- liquid
                  for block in section.blocks
                    if block.type == 'offer'
                      if forloop.parentloop.index == block.settings.position_dsk
                        render 'offer-card', block: block, class: "max-md:!jc-hidden", index: forloop.index
                      endif
                      if forloop.parentloop.index == block.settings.position_mob
                        render 'offer-card', block: block, class: "md:!jc-hidden", index: forloop.index
                      endif
                    endif
                  endfor

                  assign lazy_load = false
                  if forloop.index > 2
                    assign lazy_load = true
                  endif
                -%}
                {%- render 'product-card',
                  product: product,
                  lazy_load: lazy_load,
                  image_ratio: settings.product_image_ratio,
                  image_fill: settings.product_image_fill,
                  show_secondary_image: settings.product_secondary_image,
                  show_vendor: settings.product_vendor,
                  show_rating: settings.product_rating,
                  show_color_swatches: settings.product_color_swatches,
                  show_countdown: settings.product_countdown,
                  show_quick_add: settings.product_quick_add,
                  show_quick_view: settings.product_quick_view,
                  show_save_amount: settings.product_save_amount,
                  save_type: settings.product_save_type,
                  section_id: section.id
                -%}
              {%- endfor -%}
            </motion-list>
            {%- liquid
              if paginate.pages > 1
                render 'pagination', paginate: paginate, mode: section.settings.pagination
              endif
            -%}
          {%- endif -%}
        </div>
      </div>
    {%- endpaginate -%}
  </div>
</div>

<script type="application/ld+json">
{
  "@context": "http://schema.org",
  "@type": "CollectionPage",
  {% if collection.description != blank %}
    "description": {{ collection.description | strip_html | json }},
  {% endif %}
  {% if page_image %}
    "image": {
      "@type": "ImageObject",
      "height": {{ page_image.height | json }},
      "url": {{ page_image | image_url: width: page_image.width | prepend: "https:" | json }},
      "width": {{ page_image.width | json }}
    },
  {% endif %}
  "name": {{ collection.title | json }}
}
</script>

{% schema %}
{
  "name": "t:sections.main-collection.name",
  "class": "collection-section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 6,
      "max": 50,
      "step": 1,
      "default": 16,
      "label": "t:sections.main-collection.settings.products_per_page.label"
    },
    {
      "type": "range",
      "id": "columns",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 3,
      "label": "t:sections.global.settings.columns.label"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.global.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.global.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.global.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "select",
      "id": "pagination",
      "options": [
        {
          "value": "infinite",
          "label": "t:sections.main-collection.settings.pagination.options__1.label"
        },
        {
          "value": "click",
          "label": "t:sections.main-collection.settings.pagination.options__2.label"
        },
        {
          "value": "paginated",
          "label": "t:sections.main-collection.settings.pagination.options__3.label"
        }
      ],
      "default": "paginated",
      "label": "t:sections.main-collection.settings.pagination.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection.settings.header__filtering_sorting.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection.settings.enable_filtering.label",
      "info": "t:sections.main-collection.settings.enable_filtering.info"
    },
    {
      "type": "checkbox",
      "id": "filter_collapsed",
      "label": "t:sections.main-collection.settings.filter_collapsed.label",
      "default": false
    },
    {
      "type": "select",
      "id": "filter_type",
      "label": "t:sections.main-collection.settings.filter_type.label",
      "default": "sidebar",
      "options": [
        {
          "value": "sidebar",
          "label": "t:sections.main-collection.settings.filter_type.options__1.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection.settings.filter_type.options__2.label"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "filter_color_swatches",
      "label": "t:sections.main-collection.settings.filter_color_swatches.label",
      "info": "t:sections.main-collection.settings.filter_color_swatches.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "label": "t:sections.main-collection.settings.enable_sorting.label",
      "default": true
    },
    {
      "type": "header",
      "content": "t:sections.global.settings.header__section.content"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "t:sections.global.settings.padding_top.label",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "t:sections.global.settings.padding_bottom.label",
      "default": 36
    },
    {
      "type": "checkbox",
      "id": "divider",
      "label": "t:sections.global.settings.divider.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "t:sections.global.settings.full_width.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "rounded",
      "default": false,
      "label": "t:sections.global.settings.rounded.label"
    }
  ],
  "blocks": [
    {
      "type": "description",
      "name": "t:sections.main-collection.blocks.description.name",
      "limit": 1
    },
    {
      "type": "subcollections",
      "name": "t:sections.main-collection.blocks.subcollections.name",
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-collection.blocks.subcollections.settings.paragraph.content"
        },
        {
          "type": "link_list",
          "id": "menu",
          "label": "t:sections.main-collection.blocks.subcollections.settings.menu.label"
        },
        {
          "type": "range",
          "id": "per_row",
          "label": "t:sections.main-collection.blocks.subcollections.settings.per_row.label",
          "default": 5,
          "min": 2,
          "max": 5,
          "step": 1
        },
        {
          "type": "checkbox",
          "id": "show_count",
          "label": "t:sections.main-collection.blocks.subcollections.settings.show_count.label",
          "default": true
        }
      ],
      "limit": 1
    },
    {
      "type": "offer",
      "name": "Offer",
      "settings": [
        {
          "type": "number",
          "id": "position_dsk",
          "default": 4,
          "label": "t:sections.main-collection.blocks.promotion.settings.position_desktop.label"
        },
        {
          "type": "number",
          "id": "position_mob",
          "default": 4,
          "label": "t:sections.main-collection.blocks.promotion.settings.position_mobile.label"
        },
        {
          "type": "image_picker",
          "id": "image_dsk",
          "label": "Image (desktop)"
        },
        {
          "type": "image_picker",
          "id": "image_mob",
          "label": "Image (mobile)"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "t:sections.global.settings.heading.label",
          "default": "Example title"
        },
        {
          "type": "richtext",
          "id": "subheading",
          "label": "t:sections.global.settings.description.label",
          "default": "<p>Share information about your brand with your customers.</p>"
        },
        {
          "type": "text",
          "id": "button_label",
          "default": "Button label",
          "label": "t:sections.global.settings.button_label.label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "t:sections.global.settings.button_link.label"
        },
        {
          "type": "url",
          "id": "image_link",
          "label": "Image link",
          "info": "Only available if the heading, description, button text are empty. Specifying this url will turn the cover image into a link."
        },
        {
          "type": "select",
          "id": "mobile_layout",
          "label": "Mobile layout",
          "options": [
            {
              "value": "compact",
              "label": "Compact"
            },
            {
              "value": "default",
              "label": "Default"
            },
          ],
          "default": "default",
        },
        {
          "type": "header",
          "content": "t:sections.global.settings.header__colors.content",
          "info": "t:sections.global.settings.header__colors.info"
        },
        {
          "type": "color",
          "id": "color_text",
          "label": "t:sections.global.settings.color_text.label",
          "default": "#ffffff"
        },
        {
          "type": "color",
          "id": "color_button_text",
          "label": "t:sections.global.settings.color_button_text.label",
          "default": "#171717"
        },
        {
          "type": "color",
          "id": "color_button_background",
          "label": "t:sections.global.settings.color_button_background.label",
          "default": "#ffffff"
        },
        {
          "type": "color_background",
          "id": "background_color",
          "label": "Block background"
        }
      ]
    }
  ]
}
{% endschema %}
